# Simple example shellcode for 32-bit ARM
#
# Writes an example string to standard out.
# Useful for demonstrating that arbitrary code
# execution is possible.

.section .text
.global _start

_start:
	# some architectures will already be in 32-bit mode
	# so comment this out if thats the case
	.code 32
	add	r6, pc, #1
	bx	r6		@ switch to 16-bit thumb mode

	# 16-bit thumb code
	.code 16

	# _write(fd, buf, size)
	mov	r0, $0x1	@ stdout 
	mov	r1, pc
	add	r1, #24		@ distance from code to string
	mov	r2, #8		@ length of string
	mov	r7, $0x4	@ syscall number
	svc	1		@ interrupt

	# _exit(int)
	sub	r4, r4, r4
	mov	r0, r4		@ exit code 0
	mov	r7, $0x1	@ syscall number
	svc	1		@ interrupt

.ascii "Hacked.\n"
